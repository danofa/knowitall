function ClassfinderController($scope){$scope.address,$scope.getClass=function(){var cidr=getCidr($scope.address);return 8>=cidr?"Class A":16>=cidr?"Class B":24>=cidr?"Class C":void 0}}function ConverterController($scope){$scope.getCidr=getCidr,$scope.getNetmask=getNetmask}function TabController($scope){$scope.tab=1,$scope.changeTab=function(newIndex){$scope.tab=newIndex},$scope.isSet=function(tabIndex){return tabIndex===$scope.tab}}function SubnetController($scope){$scope.ipCounts=[],$scope.ipTable=[],$scope.ipNetwork="172.22.0.0",$scope.ipMask="255.255.0.0",$scope.addIPCount=function(){if($scope.count){var cidr=getCidrForIpCount($scope.count),mask=getNetmask(cidr);$scope.ipCounts.push({mask:mask,cidr:cidr,requested:$scope.count,actual:getIpCount(cidr)}),$scope.ipCounts.sort(function(a,b){return b.actual===a.actual?b.requested-a.requested:b.actual-a.actual}),$scope.count=""}},$scope.calcAd=function(){$scope.ipTable=[];var startAddress=$scope.ipNetwork;$scope.ipCounts.forEach(function(ip){var nextAddress=addIpCountToAddress(startAddress,ip.actual),a={res:startAddress,pip:addIpCountToAddress(startAddress,1),dip:addIpCountToAddress(startAddress,ip.actual-2),bcast:addIpCountToAddress(startAddress,ip.actual-1),mask:ip.mask};$scope.ipTable.push(a),startAddress=nextAddress})}}function getIpCount(cidr){return Math.pow(2,32-cidr)}function getCidr(netmask){var binNetmask="";return netmask.split(".").forEach(function(octet){binNetmask+=Number(octet).toString(2)}),(binNetmask.match(/1/g)||[]).length}function getCidrForIpCount(numberOfIps){for(var hostBits=1;Math.pow(2,hostBits)-2<numberOfIps;)hostBits++;return 32-hostBits}function addIpCountToAddress(address,count){var bin="";return address.split(".").forEach(function(octet){bin+=pad8Bits(Number(octet).toString(2))}),addressFromBinary(Number(parseInt(bin,2)+count).toString(2))}function addressFromBinary(bin){for(var b=pad32Bits(bin),result="",i=0;32>i;i+=8)i>0&&(result+="."),result+=parseInt(b.substr(i,8),2);return result}function pad32Bits(binNumber){var binString=binNumber+"";return binString=("00000000000000000000000000000000"+binString).substr(binString.length)}function pad8Bits(binNumber){var binString=binNumber+"";return binString=("00000000"+binString).substr(binString.length)}function getNetmask(cidr){if(cidr>32)return"error";for(var netMask="",i=0;4>i;i++){i>0&&(netMask+=".");for(var octet="",x=0;8>x;x++)octet+=cidr>8*i+x?"1":"0";netMask+=parseInt(octet,2)}return netMask}var app=angular.module("ipUtils",[]);app.controller("TabController",["$scope",TabController]),app.controller("SubnetController",["$scope",SubnetController]),app.controller("ConverterController",["$scope",ConverterController]),app.controller("ClassfinderController",["$scope",ClassfinderController]);